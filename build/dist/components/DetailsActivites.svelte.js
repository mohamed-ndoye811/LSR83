import './DetailsActivites.svelte.css.proxy.js';
/* src\components\DetailsActivites.svelte generated by Svelte v3.32.3 */
import {
	SvelteComponent,
	append,
	attr,
	bubble,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	run_all,
	safe_not_equal,
	set_data,
	space,
	text
} from "../../_snowpack/pkg/svelte/internal.js";

function create_fragment(ctx) {
	let div3;
	let div0;
	let t0;
	let div1;
	let t1;
	let div2;
	let p;
	let strong;
	let t3;
	let t4;
	let t5;
	let div4;
	let mounted;
	let dispose;

	return {
		c() {
			div3 = element("div");
			div0 = element("div");
			t0 = space();
			div1 = element("div");
			t1 = space();
			div2 = element("div");
			p = element("p");
			strong = element("strong");
			strong.textContent = "ActivitÃ©e:";
			t3 = space();
			t4 = text(/*typeActivite*/ ctx[0]);
			t5 = space();
			div4 = element("div");
			attr(div0, "class", "reliefPannel svelte-f54wrg");
			attr(div1, "class", "backgroundPannel svelte-f54wrg");
			attr(div2, "class", "textContainer svelte-f54wrg");
			attr(div3, "class", "detailsPannel svelte-f54wrg");
			attr(div4, "class", "blurBackground svelte-f54wrg");
		},
		m(target, anchor) {
			insert(target, div3, anchor);
			append(div3, div0);
			append(div3, t0);
			append(div3, div1);
			append(div3, t1);
			append(div3, div2);
			append(div2, p);
			append(p, strong);
			append(p, t3);
			append(p, t4);
			insert(target, t5, anchor);
			insert(target, div4, anchor);

			if (!mounted) {
				dispose = [
					listen(div3, "click", /*click_handler*/ ctx[2]),
					listen(div4, "click", /*click_handler_1*/ ctx[1])
				];

				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*typeActivite*/ 1) set_data(t4, /*typeActivite*/ ctx[0]);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div3);
			if (detaching) detach(t5);
			if (detaching) detach(div4);
			mounted = false;
			run_all(dispose);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	document.getElementById("darkenScreen").style.visibility = "visible";
	let { typeActivite = "vebeb" } = $$props;

	function click_handler_1(event) {
		bubble($$self, event);
	}

	function click_handler(event) {
		bubble($$self, event);
	}

	$$self.$$set = $$props => {
		if ("typeActivite" in $$props) $$invalidate(0, typeActivite = $$props.typeActivite);
	};

	return [typeActivite, click_handler_1, click_handler];
}

class DetailsActivites extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { typeActivite: 0 });
	}
}

export default DetailsActivites;